{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const fetchAllPeople = async () => {\n  try {\n    const response = await api.get('/people');\n    return response.data;\n  } catch (error) {\n    console.error('获取人物列表失败:', error);\n    throw error;\n  }\n};\nexport const searchPeople = async query => {\n  try {\n    const response = await api.get(`/people/search`, {\n      params: {\n        q: query\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('搜索人物失败:', error);\n    throw error;\n  }\n};\nexport const importPerson = async personData => {\n  try {\n    const response = await api.post('/people/import', personData);\n    return response.data;\n  } catch (error) {\n    console.error('导入人物数据失败:', error);\n    throw error;\n  }\n};\nexport const batchImportPeople = async peopleData => {\n  try {\n    const response = await api.post('/people/batch-import', peopleData);\n    return response.data;\n  } catch (error) {\n    console.error('批量导入人物数据失败:', error);\n    throw error;\n  }\n};\nexport const fetchPersonById = async id => {\n  try {\n    const response = await api.get(`/people/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`获取人物(ID: ${id})详情失败:`, error);\n    throw error;\n  }\n};\nexport const fetchEventsByYear = async year => {\n  try {\n    const response = await api.get(`/events/year/${year}`);\n    return response.data;\n  } catch (error) {\n    console.error(`获取${year}年事件失败:`, error);\n    throw error;\n  }\n};\nexport const fetchEventsByAge = async age => {\n  try {\n    const response = await api.get(`/events/age/${age}`);\n    return response.data;\n  } catch (error) {\n    console.error(`获取${age}岁事件失败:`, error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","fetchAllPeople","response","get","data","error","console","searchPeople","query","params","q","importPerson","personData","post","batchImportPeople","peopleData","fetchPersonById","id","fetchEventsByYear","year","fetchEventsByAge","age"],"sources":["/Users/zeta/Documents/years_web/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\nexport const fetchAllPeople = async () => {\n  try {\n    const response = await api.get('/people');\n    return response.data;\n  } catch (error) {\n    console.error('获取人物列表失败:', error);\n    throw error;\n  }\n};\n\nexport const searchPeople = async (query) => {\n  try {\n    const response = await api.get(`/people/search`, {\n      params: { q: query }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('搜索人物失败:', error);\n    throw error;\n  }\n};\n\nexport const importPerson = async (personData) => {\n  try {\n    const response = await api.post('/people/import', personData);\n    return response.data;\n  } catch (error) {\n    console.error('导入人物数据失败:', error);\n    throw error;\n  }\n};\n\nexport const batchImportPeople = async (peopleData) => {\n  try {\n    const response = await api.post('/people/batch-import', peopleData);\n    return response.data;\n  } catch (error) {\n    console.error('批量导入人物数据失败:', error);\n    throw error;\n  }\n};\n\nexport const fetchPersonById = async (id) => {\n  try {\n    const response = await api.get(`/people/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`获取人物(ID: ${id})详情失败:`, error);\n    throw error;\n  }\n};\n\nexport const fetchEventsByYear = async (year) => {\n  try {\n    const response = await api.get(`/events/year/${year}`);\n    return response.data;\n  } catch (error) {\n    console.error(`获取${year}年事件失败:`, error);\n    throw error;\n  }\n};\n\nexport const fetchEventsByAge = async (age) => {\n  try {\n    const response = await api.get(`/events/age/${age}`);\n    return response.data;\n  } catch (error) {\n    console.error(`获取${age}岁事件失败:`, error);\n    throw error;\n  }\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}